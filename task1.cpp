#include <iostream> // Підключення бібліотеки для введення/виведення даних (наприклад, cout, cin)
#include <string>   // Підключення бібліотеки для роботи з рядками (для використання std::string в якості типу винятку)

// Використання стандартного простору імен, щоб не писати std:: перед cout, cin тощо.
using namespace std;

// Головна функція програми
int main(void) {
    int a = 8; // Оголошення та ініціалізація цілочисельної змінної 'a' значенням 8 [cite: 4]
    int b = 0; // Оголошення цілочисельної змінної 'b' та ініціалізація її 0 [cite: 4]
    int c = 0; // Оголошення цілочисельної змінної 'c' та ініціалізація її 0 [cite: 4]

    cout << "Enter a number to divide 8 by: "; // Виведення повідомлення користувачеві з проханням ввести число
    cin >> b; // Зчитування значення, введеного користувачем, у змінну 'b' [cite: 4]

    try { // Початок блоку try, в якому може виникнути виняток
        // Ваш код тут [cite: 4]
        if (b == 0) { // Перевірка, чи введена користувачем змінна 'b' дорівнює нулю
            // Якщо b дорівнює 0, генеруємо виняток типу std::string
            // Це відповідає умові "Add code to throw the exception manually using the throw keyword when a user inputs 0" [cite: 3]
            throw string("Your input is not valid, you can't divide by zero.");
        }
        c = a / b; // Виконання операції ділення 'a' на 'b' та присвоєння результату змінній 'c' [cite: 4]
        // Ваш код тут [cite: 5]
        cout << c << endl; // Виведення значення змінної 'c' (результату ділення) на екран [cite: 5]
    }
    catch (const string& e) { // Початок блоку catch, який перехоплює винятки типу std::string
        // e - це об'єкт винятку (в даному випадку рядок), який був згенерований
        cerr << e << endl; // Виведення повідомлення про помилку (змінної e) в потік помилок cerr
                            // Це відповідає умові "prints a message when the user inputs invalid data" [cite: 2]
                            // та очікуваному виводу "Your input is not valid, you can't divide by zero." [cite: 6]
        cout << 0 << endl; // Виведення 0, як зазначено в прикладі виводу для вхідних даних 0 [cite: 6]
    }
    // Тут міг би бути ваш код для блоку catch, якщо б виняток був іншого типу [cite: 4]

    return 0; // Повернення 0 з функції main, що означає успішне завершення програми [cite: 5]
}
